CRUD Operation of user data and images
This application was developed as part of a college project to provide essential functionalities for user account management. It allows users to register by entering their first name, last name, email, and password. After successful registration, the system directs users to the login page, where they can sign in using the email and password they provided. Upon login, user data is securely stored in a MySQL database under a table named users. The database captures crucial details such as user ID, first name, last name, email, and an encrypted password for security.
After logging in, users are taken to the profile page, where they can view and update their account details. The profile page includes fields for updating the full name, email, and phone number, along with an option to upload a profile picture. Users can save changes by clicking the "Update" button, which writes the updated information back to the database. A navigation bar is available on this page, providing links to key sections, including Home, Profile, and Logout.
The homepage further extends the application's features by allowing users to create, edit, and delete status posts. These statuses are stored in a separate database table called create_statuses, which records the ID, username, status text, and timestamp of each entry. Users can view all their statuses, modify the content, or remove unwanted ones, with each action reflecting accurately in the database. The homepage also features a footer similar to that of the profile page for design consistency.
To ensure seamless session management, users can securely log out of the application, which clears their session data. The MySQL database named PHP plays a crucial role in managing all data storage needs. The users table contains fields for user details, while the create_statuses table organizes user status updates, providing fields for the status text, user association, and creation time.
In terms of the technology stack, the frontend was developed using HTML5, CSS3, and JavaScript, ensuring a user-friendly interface and interactive features. The backend was built using PHP, which processes server-side logic, handles form submissions, and interacts with the database. MySQL was chosen for reliable and secure data storage, managing both user information and status posts.
The development process involved careful planning, wireframing, and the design of the database schema. After the initial layout creation, server-side functionalities were integrated, followed by secure database connections and data management processes. Extensive testing was conducted to ensure proper data handling, form validations, and feature functionality, including registration, login, profile updates, and status management.
This project demonstrates a well-rounded implementation of a user management system that integrates frontend, backend, and database components effectively. It provides essential features such as account registration, profile management, and dynamic status updates while maintaining a secure and structured approach to data handling.

